source install/setup.bash
source /opt/ros/humble/setup.bash



ros2 launch my_bot launch_sim.launch.py
colcon build --symlink-install


ros2 launch gazebo_ros gazebo.launch.py
ros2 run gazebo_ros spawn_entity.py -topic /robot_description -entity bot_name


ros2 launch my_bot rsp.launch.py use_sim_time:=true
ros2 run joint_state_publisher_gui joint_state_publisher_gui 


rviz2 view_bot.rviz
rviz2


ros2 run teleop_twist_keyboard teleop_twist_keyboard


ros2 launch my_bot launch_sim.launch.py world:=./src/my_bot/worlds/obs.world


--------------------------------
ros2 run rosbridge_server rosbridge_websocket

------------------------
ros controller

sudo apt install ros-humble-ros2-control ros-humble-ros2-controllers ros-humble-gazeobo-ros2-control


------------------------------------------------------------------------------------------
ros2 control list_hardware_interfaces

ros2 control list_controllers
ros2 pkg list | grep controller_manager
####
ros2 run controller_manager spawner diff_cont
ros2 run controller_manager spawner joint_broad

ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args -r /cmd_vel:=/diff_cont/cmd_vel_unstamped
#### *******From the launch file we can run whole in same time
---------------------------------------------------------------------------------------------

ros2 launch slam_toolbox online_async_launch.py params_file:=./src/my_bot/config/mapper_params_online_async.yaml use_sim_time:=true

ros2 run nav2_map_server map_server --ros-args -p yaml_filename:=my_map_save.yaml -p use_sim_time:=true

ros2 run nav2_amcl amcl --ros--args -p use_sim_time:=true


ros2 launch nav2_bringup navigation_launch.py use_sim_time:=true

#navigation with transient
ros2 launch my_bot navigation_launch.py use_sim_time:=true map_subscribe_transient_local:=true

------------------------------------final--------------------------------
source /opt/ros/humble/setup.bash
source install/setup.bash

colcon build --symlink-install
ros2 launch my_bot launch_sim.launch.py world:=./src/my_bot/worlds/obs.world

ros2 run twist_mux twist_mux --ros-args --params-file ./src/my_bot/config/twist_mux.yaml -r cmd_vel_out:=diff_cont/cmd_vel_unstamped

~/dev_ws3/src/my_bot/config$ rviz2 -d map.rviz


ros2 launch slam_toolbox online_async_launch.py params_file:=./src/my_bot/config/mapper_params_online_async.yaml use_sim_time:=true



#if needed
ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args -r /cmd_vel:=/diff_cont/cmd_vel_unstamped

ros2 launch my_bot navigation_launch.py use_sim_time:=true map_subscribe_transient_local:=true

--------------ball tracker----------------------------

ros2 run ball_tracker detect_ball --ros-args --param tuning_model:=true --remap image_in:=camera/image_raw

----if tunning doenst open
ros2 run ball_tracker detect_ball --ros-args --params-file ./src/my_bot/config/param.yaml --remap image_in:=camera/image_raw

ros2 run ball_tracker detect_ball_3d
ros2 run ball_tracker follow_ball --ros-args --remap amd_vel:=cmd_vel_tracker

***ball tracker final**
ros2 launch ball_tracker ball_tracker.launch.py params_file:=src/my_bot/config/ball_tracker_params_sim.yaml enable_3d_tracker:=true




